function  WWHBookData_AddTOCEntries(P)
{
var A=P.fN("Chapter 1 Introduction to the DACS Lock API Developers Guide","0");
var B=A.fN("1.1 Product Description","1");
B=A.fN("1.2 IDN Versus Elektron","2");
B=A.fN("1.3 Audience","3");
B=A.fN("1.4 Organization of Manual","4");
B=A.fN("1.5 References","5");
B=A.fN("1.6 Conventions","6");
var C=B.fN("1.6.1 Typographic","6#1021612");
C=B.fN("1.6.2 Programming","7");
B=A.fN("1.7 Glossary","8");
A=P.fN("Chapter 2 DACS-Compliant Source Server Applications","9");
B=A.fN("2.1 Overview","10");
B=A.fN("2.2 Establish Subservice Names","11");
B=A.fN("2.3 Define Entitlement Codes","12");
B=A.fN("2.4 Create and Write Locks","13");
B=A.fN("2.5 Publish the Map","14");
B=A.fN("2.6 Provide a Mechanism to Read the Map and Supply it to a DACS Station","15");
A=P.fN("Chapter 3 DACS Lock API","16");
B=A.fN("3.1 DACS Lock Operation","17");
B=A.fN("3.2 Forming a DACS Lock","18");
B=A.fN("3.3 What a DACS Lock Contains","19");
B=A.fN("3.4 Compression of DACS Locks","20");
B=A.fN("3.5 Compounding DACS Locks","21");
B=A.fN("3.6 Transport of DACS Locks","22");
B=A.fN("3.7 Compound DACS Lock in Relation to Permissioning","23");
A=P.fN("Chapter 4 DACS_CsLock()","24");
B=A.fN("4.1 Synopsis","25");
B=A.fN("4.2 Function Arguments","26");
B=A.fN("4.3 Data Structure: COMB_LOCK_TYPE","27");
B=A.fN("4.4 Data Structure: DACS_ERROR_TYPE","28");
B=A.fN("4.5 Return Values","29");
A=P.fN("Chapter 5 DACS_GetLock()","30");
B=A.fN("5.1 Synopsis","31");
B=A.fN("5.2 Function Arguments","32");
B=A.fN("5.3 Data Structure: PRODUCT_CODE_TYPE","33");
B=A.fN("5.4 Data Structure: DACS_ERROR_TYPE","34");
B=A.fN("5.5 Return Values","35");
A=P.fN("Chapter 6 DACS_CmpLock()","36");
B=A.fN("6.1 Synopsis","37");
B=A.fN("6.2 Function Arguments","38");
B=A.fN("6.3 Return Values","39");
A=P.fN("Chapter 7 DACS_perror()","40");
B=A.fN("7.1 Synopsis","41");
B=A.fN("7.2 Function Arguments","42");
B=A.fN("7.3 Return Values","43");
}
