function FileData_Pairs(x)
{
x.t("m.parentnode.insertbefore","window");
x.t("library","upd_type");
x.t("2.2.1","ansi");
x.t("carriage","return");
x.t("movement","new");
x.t("ansi","decode");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("description","update");
x.t("qa_decode","update");
x.t("upd_beg","zero");
x.t("upd_beg","column");
x.t("descriptions","list");
x.t("user","index");
x.t("current","entry");
x.t("last","entry");
x.t("last","character");
x.t("line","treated");
x.t("line","feed");
x.t("change","ended");
x.t("change","starts");
x.t("ended","beyond");
x.t("total","number");
x.t("a=s.createelement","(o)");
x.t("increases","length");
x.t("wraps","around");
x.t("new","entry");
x.t("new","cursor");
x.t("new","date");
x.t("supplied","user");
x.t("upd_type","upd_list");
x.t("updates","ignored");
x.t("single","sequence");
x.t("document","script");
x.t("list","library");
x.t("list","supplied");
x.t("list","follows");
x.t("list","function");
x.t("list","return");
x.t("list","data");
x.t("list","following");
x.t("pageview","transport");
x.t("treated","single");
x.t("treated","cursor");
x.t("around","end");
x.t("api","edition");
x.t("entry","wraps");
x.t("entry","follows");
x.t("entry","zero");
x.t("entry","area");
x.t("entry","starting");
x.t("entry","row");
x.t("entry","added");
x.t("max_updt","description");
x.t("max_updt","number");
x.t("reasons","repositioning");
x.t("upd_list","array");
x.t("follows","max_updt");
x.t("follows","row");
x.t("changed","upd_beg");
x.t("changed","total");
x.t("changed","row");
x.t("window","document");
x.t("zero","length");
x.t("plus","line");
x.t("area","updated");
x.t("repositioning","cursor");
x.t("array","offset");
x.t("array","update");
x.t("upd_end","upd_beg");
x.t("upd_end","column");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("characters","changed");
x.t("structures","2.2.1");
x.t("structures","2.2");
x.t("auto","send");
x.t("point","carriage");
x.t("number","characters");
x.t("number","entries");
x.t("written","increases");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("length","current");
x.t("length","updates");
x.t("length","max_updt");
x.t("length","generated");
x.t("chapter","data");
x.t("index","array");
x.t("starting","less");
x.t("row","upd_end");
x.t("row","row");
x.t("row","e.g");
x.t("row","scrolled");
x.t("ignored","entry");
x.t("transport","api");
x.t("added","list");
x.t("added","above");
x.t("cursor","movement");
x.t("cursor","entry");
x.t("cursor","position");
x.t("interpreting","update");
x.t("end","line");
x.t("return","qa_decode");
x.t("return","plus");
x.t("feed","treated");
x.t("e.g","change");
x.t("e.g","data");
x.t("less","number");
x.t("scroll","chapter");
x.t("scrolling","generates");
x.t("send","pageview");
x.t("(arguments)","[r]");
x.t("generated","point");
x.t("2.2.1.1","interpreting");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("scrolled","new");
x.t("decode","2.2.1.1");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("sequence","character");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("data","changed");
x.t("data","structures");
x.t("data","structure");
x.t("structure","contains");
x.t("beyond","last");
x.t("character","changed");
x.t("character","written");
x.t("above","scrolling");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("column","e.g");
x.t("offset","last");
x.t("edition","interpreting");
x.t(".q=i","[r]");
x.t("starts","upd_end");
x.t("following","reasons");
x.t("following","scroll");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("2.2","using");
x.t("using","data");
x.t("a.async=1","a.src=g");
x.t("googleanalyticsobject","[r]");
x.t("position","following");
x.t("entries","list");
x.t("entries","length");
x.t("generates","entry");
x.t("update","list");
x.t("update","entry");
x.t("update","entries");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("contains","entry");
x.t("updated","descriptions");
}
