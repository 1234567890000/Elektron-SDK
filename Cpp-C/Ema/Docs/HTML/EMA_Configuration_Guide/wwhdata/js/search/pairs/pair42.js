function FileData_Pairs(x)
{
x.t("compressiontype::none","guaranteedoutputbuffers");
x.t("dictionarytype","value");
x.t("dictionarytype","optional");
x.t("dictionarytype","channeldictionary");
x.t("appendix","emaconfig.xml");
x.t("parameter","defines");
x.t("parameter","specified");
x.t("possible","values");
x.t("version","1.0");
x.t("version","emaconfig.xml");
x.t("defines","consumer");
x.t("defaulted","possible");
x.t("defaulted","30000");
x.t("defaulted","file");
x.t("defaulted","emalog_processid.log");
x.t("defaulted","none");
x.t("defaulted","rdmfielddictionary");
x.t("defaulted","rssl_socket");
x.t("defaulted","channeldictionary");
x.t("defaulted","success");
x.t("https","tunnel");
x.t("30000","tcpnodelay");
x.t("30000","connectionpingtimeout");
x.t("dictionarylist","dictionary");
x.t("dictionarylist","dictionarygroup");
x.t("current","version");
x.t("channeltype","possible");
x.t("channeltype","value");
x.t("dictionarytype::channeldictionary","dictionary");
x.t("enumtype.def","rdmfielddictionaryfilename");
x.t("type","channeltype");
x.t("type","channeltype::rssl_http");
x.t("type","channeltype::rssl_encrypted");
x.t("channeltype::rssl_socket","tcp");
x.t("channeltype::rssl_socket","compressiontype");
x.t("enumtypedeffilename","value");
x.t("logger_1","dictionary");
x.t("logger_1","loggertype");
x.t("connection","type");
x.t("ommconsumer","application");
x.t("default","consumer");
x.t("channel","channel");
x.t("channel","channellist");
x.t("channel","name");
x.t("channel","value");
x.t("channel","optional");
x.t("logger_2","dictionary");
x.t("logger_2","loggertype");
x.t("channellist","channel");
x.t("channellist","channelgroup");
x.t("guaranteedoutputbuffers","value");
x.t("tcpnodelay","value");
x.t("tcpnodelay","optional");
x.t("file","possible");
x.t("file","current");
x.t("file","loggertype");
x.t("file","elektron");
x.t("file","distributed");
x.t("file","names");
x.t("file","success");
x.t("http","tunnel");
x.t("emalog_processid.log","filename");
x.t("5000","host");
x.t("5000","connectionpingtimeout");
x.t("loggertype::stdout","loggerseverity");
x.t("api","edition");
x.t("dictionary_1","dictionarytype");
x.t("dictionary_1","consumer");
x.t("dictionary_2","dictionarytype");
x.t("dictionary_2","consumer");
x.t("tcp","connection");
x.t("specified","defaultconsumer");
x.t("consumer_1","channel");
x.t("consumer_1","consumerlist");
x.t("loggerseverity::success","logger");
x.t("emaconfig","appendix");
x.t("emaconfig","consumergroup");
x.t("defaultconsumer","parameter");
x.t("defaultconsumer","value");
x.t("name","value");
x.t("consumer_2","channel");
x.t("dictionary","dictionarylist");
x.t("dictionary","name");
x.t("dictionary","dictionary");
x.t("dictionary","value");
x.t("dictionary","optional");
x.t("dictionary","names");
x.t("14002","channel");
x.t("none","possible");
x.t("none","zlib");
x.t("consumergroup","defaultconsumer");
x.t("consumergroup","channelgroup");
x.t("localhost","14002");
x.t("localhost","port");
x.t("tcp_nodelay","tcpnodelay");
x.t("tcp_nodelay","option");
x.t("error","nologmsg");
x.t("1.0","encoding");
x.t("dictionarygroup","dictionarylist");
x.t("dictionarygroup","emaconfig");
x.t("emaconfig.xml","file");
x.t("emaconfig.xml","configuration");
x.t("first","consumer");
x.t("logger","name");
x.t("logger","logger");
x.t("logger","value");
x.t("logger","loggerlist");
x.t("logger","optional");
x.t("emalog","loggerseverity");
x.t("channelgroup","channellist");
x.t("channelgroup","loggergroup");
x.t("tunnel","connection");
x.t("lz4","compressiontype");
x.t("dictionarytype::filedictionary","dictionary");
x.t("ommconsumerconfig::consumername","first");
x.t("ignored","dictionarytype");
x.t("xml","version");
x.t("filename","value");
x.t("filename","optional");
x.t("rdmfielddictionary","enumtype.def");
x.t("channeltype::rssl_http","http");
x.t("channeltype::rssl_http","compressiontype");
x.t("loggertype::file","filename");
x.t("filedictionary","channeldictionary");
x.t("consumer","parameter");
x.t("consumer","name");
x.t("consumer","consumer");
x.t("consumer","configuration");
x.t("consumer","consumerlist");
x.t("channeltype::rssl_encrypted","https");
x.t("channeltype::rssl_encrypted","compressiontype");
x.t("message","api");
x.t("option","tcp_nodelay");
x.t("122.1.1.100","port");
x.t("loggertype","value");
x.t("loggertype","optional");
x.t("rdmfielddictionaryfilename","value");
x.t("stdout","file");
x.t("configuration","file");
x.t("configuration","used");
x.t("rssl_socket","localhost");
x.t("compressiontype","value");
x.t("compressiontype","optional");
x.t("value","compressiontype::none");
x.t("value","30000");
x.t("value","dictionarytype::channeldictionary");
x.t("value","channeltype::rssl_socket");
x.t("value","logger_1");
x.t("value","logger_2");
x.t("value","5000");
x.t("value","loggertype::stdout");
x.t("value","dictionary_1");
x.t("value","dictionary_2");
x.t("value","consumer_1");
x.t("value","loggerseverity::success");
x.t("value","consumer_2");
x.t("value","14002");
x.t("value","localhost");
x.t("value","emalog");
x.t("value","dictionarytype::filedictionary");
x.t("value","channeltype::rssl_http");
x.t("value","loggertype::file");
x.t("value","channeltype::rssl_encrypted");
x.t("value","122.1.1.100");
x.t("value","./enumtype.def");
x.t("value","channel_1");
x.t("value","channel_2");
x.t("value","host");
x.t("value","./rdmfielddictionary");
x.t("value","channel_3");
x.t("value","channel_4");
x.t("zlib","lz4");
x.t("./enumtype.def","dictionary");
x.t("nologmsg","loggerseverity");
x.t("loggerseverity","value");
x.t("loggerseverity","optional");
x.t("elektron","message");
x.t("loggerlist","logger");
x.t("loggerlist","loggergroup");
x.t("channel_1","channeltype");
x.t("channel_1","logger");
x.t("loggergroup","dictionarygroup");
x.t("loggergroup","loggerlist");
x.t("optional","defaulted");
x.t("channel_2","channeltype");
x.t("channel_2","logger");
x.t("host","value");
x.t("./rdmfielddictionary","enumtypedeffilename");
x.t("examples","xml");
x.t("channel_3","channeltype");
x.t("application","specify");
x.t("values","channeltype::rssl_socket");
x.t("values","none");
x.t("values","tcp_nodelay");
x.t("values","filedictionary");
x.t("values","stdout");
x.t("values","verbose");
x.t("channel_4","channeltype");
x.t("connectionpingtimeout","value");
x.t("connectionpingtimeout","optional");
x.t("port","value");
x.t("verbose","success");
x.t("edition","appendix");
x.t("training","examples");
x.t("utf-8","emaconfig");
x.t("consumerlist","default");
x.t("consumerlist","consumergroup");
x.t("consumerlist","consumer");
x.t("used","ommconsumer");
x.t("warning","error");
x.t("distributed","training");
x.t("channeldictionary","dictionarytype");
x.t("channeldictionary","possible");
x.t("channeldictionary","file");
x.t("channeldictionary","dictionary");
x.t("names","ignored");
x.t("names","optional");
x.t("success","possible");
x.t("success","logger");
x.t("success","warning");
x.t("encoding","utf-8");
x.t("specify","ommconsumerconfig::consumername");
}
