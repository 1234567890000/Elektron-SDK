function FileData_Pairs(x)
{
x.t("3.0.1","connection");
x.t("3.0.1","ads");
x.t("supports","private");
x.t("supports","application-selected");
x.t("channelset","list");
x.t("channelset","configuration");
x.t("rdm","dictionaries");
x.t("table","supported");
x.t("description","new");
x.t("failover","servers");
x.t("failover","specify");
x.t("built-in","rmtes");
x.t("delivery","flow");
x.t("omm","containers");
x.t("binary","representations");
x.t("apply","received");
x.t("current","user\u2019s");
x.t("uses","current");
x.t("uses","default");
x.t("cache","rmtesbuffer");
x.t("guaranteed","delivery");
x.t("configurable","admin");
x.t("resume","application");
x.t("resume","item");
x.t("type","rssl_reliable_mcast");
x.t("batch","request");
x.t("open","ema");
x.t("calls","services");
x.t("rmtes","decoder");
x.t("connection","failover");
x.t("connection","type");
x.t("connection","attempt");
x.t("multiple","items");
x.t("channel","channelset");
x.t("default","rdm");
x.t("default","admin");
x.t("default","login");
x.t("filters","default");
x.t("single-open","functionality");
x.t("needed","application");
x.t("new","3.0.1");
x.t("rssl_reliable_mcast","new");
x.t("servers","via");
x.t("single","open");
x.t("single","request");
x.t("items","via");
x.t("objects","apply");
x.t("overwrite","ema");
x.t("severity","level");
x.t("list","failover");
x.t("list","default");
x.t("list","dynamic");
x.t("file","config");
x.t("file","logger");
x.t("file","tunnel");
x.t("requested","first");
x.t("features","table");
x.t("features","feature");
x.t("features","2.2");
x.t("fails","ema");
x.t("accepts","requests");
x.t("end-to-end","authentication");
x.t("via","channelset");
x.t("via","item");
x.t("defaults","login");
x.t("primitives","messages");
x.t("specified","emaconfig.xml");
x.t("desired","severity");
x.t("name","defaults");
x.t("functionality","rmtes");
x.t("standardized","output");
x.t("obtain","binary");
x.t("dictionary","requests");
x.t("component","specifying");
x.t("logging","specify");
x.t("provides","built-in");
x.t("provides","means");
x.t("optimized","pause");
x.t("attempts","connect");
x.t("allows","application");
x.t("attempt","fails");
x.t("fields","elements");
x.t("data::getashex","applications");
x.t("stream","single");
x.t("stream","ema");
x.t("prints","omm");
x.t("flow","control");
x.t("request","uses");
x.t("request","calls");
x.t("request","message");
x.t("request","application");
x.t("request","server");
x.t("supported","features");
x.t("pause","resume");
x.t("config","application");
x.t("config","ema");
x.t("error","reporting");
x.t("next","channel");
x.t("behaviors","e.g");
x.t("feature","description");
x.t("ads","multicast");
x.t("domain","requests");
x.t("connecting","server");
x.t("first","service");
x.t("means","modify");
x.t("messages","programmatic");
x.t("messages","stdout");
x.t("messages","screen");
x.t("emaconfig.xml","file");
x.t("logger","messages");
x.t("logger","ema");
x.t("rmtesbuffer","objects");
x.t("control","file");
x.t("dictionaries","requested");
x.t("decoder","needed");
x.t("decoder","ema");
x.t("tunnel","stream");
x.t("reporting","specify");
x.t("particular","item");
x.t("private","streams");
x.t("whether","send");
x.t("requests","configurable");
x.t("requests","batch");
x.t("requests","connecting");
x.t("requests","ema");
x.t("data::tostring","prints");
x.t("programmatically","specify");
x.t("admin","domain");
x.t("directory","dictionary");
x.t("directory","request");
x.t("changes","data::tostring");
x.t("format","called");
x.t("interest","multiple");
x.t("programmatic","config");
x.t("level","error");
x.t("login","request");
x.t("login","directory");
x.t("login","attributes");
x.t("message","specify");
x.t("multicast","component");
x.t("multicast","applications");
x.t("e.g","end-to-end");
x.t("stdout","file");
x.t("configuration","file");
x.t("configuration","specified");
x.t("configuration","consumer's");
x.t("additional","associated");
x.t("send","request");
x.t("send","logger");
x.t("application-selected","single-open");
x.t("representations","omm");
x.t("view","application");
x.t("services","filters");
x.t("screen","standardized");
x.t("authentication","guaranteed");
x.t("specifying","connection");
x.t("dynamic","view");
x.t("output","format");
x.t("received","changes");
x.t("application","cache");
x.t("application","single");
x.t("application","programmatically");
x.t("application","send");
x.t("application","turn");
x.t("application","specify");
x.t("called","stringification");
x.t("subset","fields");
x.t("containers","primitives");
x.t("applications","obtain");
x.t("applications","connect");
x.t("service","starts");
x.t("starts","accepts");
x.t("elements","particular");
x.t("turn","ema");
x.t("2.2","supported");
x.t("connect","next");
x.t("connect","ads");
x.t("modify","default");
x.t("associated","behaviors");
x.t("stringification","data::getashex");
x.t("consumer's","connection");
x.t("specify","overwrite");
x.t("specify","list");
x.t("specify","desired");
x.t("specify","whether");
x.t("specify","interest");
x.t("specify","subset");
x.t("ema","supports");
x.t("ema","uses");
x.t("ema","logging");
x.t("ema","provides");
x.t("ema","attempts");
x.t("ema","allows");
x.t("ema","configuration");
x.t("server","pause");
x.t("server","login");
x.t("user\u2019s","name");
x.t("attributes","directory");
x.t("item","list");
x.t("item","optimized");
x.t("item","stream");
x.t("streams","additional");
}
