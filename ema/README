(C) Copyright 2015 Thomson Reuters Limited. All rights reserved,
Reuters Oak Brook, IL USA
 
0. CONTENTS
============================
 
1.    REFERENCE INFORMATION
2.    RELEASE OVERVIEW
3.    DOCUMENTATION
4.    INSTALLATION


1. REFERENCE INFORMATION
=============================

    I-COS Questionnaire: 6032
    Reuters Item Number: N/A
    Product Name: Elektron Message API - C++ Edition
    Release Number: 3.0.0
    Load Number: 2
    Load ID (linux): ema3.0.0.L2.linux
    Load ID (windows): ema3.0.0.L2.win
    Release Status: Beta
    Release Type: Beta
    US ECCN: EAR99
    EU ECCN: None
    Export Code: NL
    Security Compliance: Thomson Reuters Security Compliant
    Hardware Platform: Intel or AMD 
    Operating System: 
       (linux)
          - Red Hat Enterprise Linux Advanced Server 
          - Oracle Linux 
	  - CentOS
		   
       (windows)
          - Windows 8, Windows 7, Sever 2012 & Server 2008 


		  
    Supersedes: ema3.0.0.L1 (Beta1)
    Template Version Supported: v4.20.19_TREP_15.51 RWF and Marketfeed Record
                                Templates



2. RELEASE OVERVIEW
===================

2.1 Release Purpose

    This is a BETA2 release of the EMA product.
	
    This is meant for evaluation purposes only.


2.1.1 Release Purpose History

    This is Beta release of the Elektron Message API (EMA).
		
    The EMA is an ease of use, viewable source, OMM API. EMA is designed to 
    provide clients rapid development of applications, minimizing lines of code
    and providing a broad range of flexibility. It provides flexible configuration
    with default values to simplify use and deployment. 
    
    EMA is written on top of the Elektron Transport API (ETA) utilizing 
    the Value Added Reactor and Watchlist.  NOTE that ETA is a re-brand of the Ultra
    Performance API (UPA).

    Client feedback is important on an BETA as it can provide better direction 
    on the development of the product.
	
    This is for internal use and BETA clients only.  
	
		
	Functionality Supported:
	------------------------
	- consumer only (full OMM support)
	- application authentication token
	- streaming and snapshot
	- private streams
	- standard item request, reissue & close
	- RDM domains  (except enhanced symbol list)
	- single connection per OmmConsumer object
	- tcp ip connection type
	- http and https connectivity
	- concrete service by name or id
	- on and off stream posting
	- file logger functionality
	- dictionary download
	- dictionary load from file
	- api dispatch / user dispatch
	- message in message
	- generic message with container
	- generic message with a message
	- posting of containers
	- posting with a message
	- view request
	- batch request (no reissue or close)
	- RMTES support
	- Administrative domain item requests
	- Administrative domain configuration
	- GitHub accessible


	Deficiency
        ----------
	- tunneled streams

		
		
3.  DOCUMENTATION
============================

3.1 EMA Documentation

    - EMA Developers Guide
    - EMA Configuration Guide
    - EMA Reference Manual 
	- Readme (This File)
	   
	
4.  INSTALLATION
============================
 
4.1 Hardware/OS Requirements

      (Linux)
      - HP Intel PC or AMD Opteron (64-bit)
      - AMD Opteron (64-bit)
      - Red Hat Enterprise Linux Advanced Server 6.0 64-bit 
      - Oracle Linux Server 6.0 64-bit (Qualified on RHAS 6.0)
      - Oracle Linux Server 7.0 64-bit
	  - CentOS 7 64-bit (Qualified on OL7)

      (Windows)
      - Intel compatible PC and AMD Opteron for 64-bit
      - CPUs must have high resolution timer frequencies greater than 1GHz.
      - Microsoft Windows Server 2008 (SP1 or greater) 64-bit 
      - Microsoft Windows 7 Professional 64-bit
      - Microsoft Windows 8 Professional 64-bit
      - Microsoft Windows 8.1 Professional 64-bit 



4.2 Software Requirements
	
      (Linux)
      - GCC compiler suite version 4.4.4 or higher for RHAS 6.0 (64-bit)
      - GCC compiler suite version 4.4.4 or higher for OLS 6.0 (64-bit)
      - GCC compiler suite version 4.8.2 or higher for OLS 7.0 (64-bit)
      - GCC compiler suite version 4.8.2 or higher for CentOS 7.0 (64-bit)

      (Windows)
      - Microsoft Visual C++ 10.0 64-bit (visual Studio 2010)
      - Microsoft Visual C++ 11.0 64-bit (Visual Studio 2012)
      - Microsoft Visual C++ 12.0 64-bit (Visual Studio 2013)
	  
4.3 Installation Activities

4.3.1 Installation
      Unzip/Untar the EMA distribution to the directory of your choice.
	  
      (Linux)
      Run the command /sbin/ldconfig -n <EMA shared object location>
	  
      (Windows)
      The Microsoft c-runtime libraries are not shipped with this load.  
      Please refer to Microsoft's Website to obtain the redistributables.
      http://www.microsoft.com	 

4.3.2 If you are to relocate the files after untarring/unzipping,
      A copy of the README file should remain in the same relative
      location as untarred/unzipped for Documentation Portal reference.


Release History

---------------
3.0.0.L2 (Beta)
---------------
EMACPP-365	Consumer350 crash on notifyStatusToListener.
EMACPP-363	exception throwing while opening or modifying items
EMACPP-361	define login, directory and dictionary request timeouts in milliseconds (not seconds as is now)
EMACPP-357	420__MarketPrice__AdminDomainConfig code error.
EMACPP-351	logger file output for compressionType not correct
EMACPP-348	430_ServiceProvderStatus_Streaming make file makes Consumer100.
EMACPP-346	passing of message decoding error to the application on reading payload or attrib
EMACPP-338	Invalid output on exception on invalidDate
EMACPP-337	Consumer420 crash
EMACPP-336	Off stream posting crash
EMACPP-333	formatting of the OmmError output in containers
EMACPP-329	Consumer331 hangs does nothing.
EMACPP-323	consider location of the EmaConfig.xml file in the apps
EMACPP-317	corrections to example makefile and common.mk files
EMACPP-314	Confirm support for Centos7 (qualification using OL7 libraries)
EMACPP-313	Confirm support for OL6 (qualification using AS6 libraries)
EMACPP-309	The linux libraries should abide by the .so.# convention
EMACPP-307	Building the EMA library in windows results in the appending of the compiler version (ie. 110, 120)
EMACPP-303	some warnings building Src/Access ema libraries
EMACPP-301	RWFEnum Dictionary request with INFO flag give Blank value for RT_Version, DT_Version, Version.
EMACPP-291	post with refreshMsg hang consumer
EMACPP-290	PostUserRights set on postMsg but not go on wire.
EMACPP-288	Source directory request with serviceName request all services.
EMACPP-287	Error on source directory reissue.
EMACPP-283	On DirectoryRequestTimeout not log on logger file or stdout
EMACPP-281	Consumer330 crash with this stack at exit.
EMACPP-278	Consumer350 crash after pause
EMACPP-270	using .host( host:port) to modify configuration results in channel type SOCKET regardless of other configuration
EMACPP-259	getAsHex() implementation in EMA
EMACPP-248	ensure the default consumer selection implementation follows design
EMACPP-243	add index operators to EmaBuffer and EmaString
EMACPP-242	make sure that EMA uses rssl***IsValid() functions for time, date and date time validation
EMACPP-241	memory pool assignment in EMA
EMACPP-235	restructure Data class layout for performance and functionality split
EMACPP-229	OmmArray::toString() errors
EMACPP-222	add more doxygen to EMA about exception throwing
EMACPP-217	Provide Batch Request functionality
EMACPP-216	OnStream posting with RefreshMsg throw Exception.
EMACPP-207	UPA Reactor Watchlist: Batch requested items may crash if closing an item
EMACPP-202	Align EMA and UPA names
EMACPP-196	error while configuring ema for dictionaries
EMACPP-189	streaming of login domain
EMACPP-144	Consumer331 error while processing directory refresh
EMACPP-130	Output External header and other components in toString() methods
EMACPP-108	implementation of the OmmconsumerConfig::addAdminMsg()
EMACPP-53	rmtes decoder
EMACPP-47	versioning of the EMA supported libraries
EMACPP-40	Rssl string conversion methods
EMACPP-39	item request timeout in watch list
