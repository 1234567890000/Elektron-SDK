function FileData_Pairs(x)
{
x.t("delivery","persistency");
x.t("related","parameters");
x.t("user","authentication");
x.t("guaranteed","delivery");
x.t("functionalities","user");
x.t("identity","tunnel");
x.t("tunnelstreamrequest","classofservice");
x.t("tunnelstreamrequest","class");
x.t("end-to-end","flow");
x.t("features","related");
x.t("features","per-tunnel");
x.t("specified","tunnelstreamrequest");
x.t("classofservice","classes");
x.t("classofservice","class");
x.t("provides","additional");
x.t("parameters","identity");
x.t("basis","classofservice");
x.t("stream","specified");
x.t("stream","provides");
x.t("stream","basis");
x.t("stream","tunnel");
x.t("stream","private");
x.t("flow","control");
x.t("request","information");
x.t("control","guaranteed");
x.t("tunnel","stream");
x.t("specifies","features");
x.t("specifies","request");
x.t("private","stream");
x.t("establishing","tunnel");
x.t("additional","functionalities");
x.t("authentication","end-to-end");
x.t("information","establishing");
x.t("configure","features");
x.t("classes","tunnelstreamrequest");
x.t("classes","3.2.6");
x.t("per-tunnel","stream");
x.t("3.2.6","tunnelstreamrequest");
x.t("class","specifies");
x.t("persistency","configure");
}
